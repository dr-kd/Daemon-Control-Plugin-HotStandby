  NAME
    Daemon::Control::Plugin::HotStandby

  DESCRIPTION
    This is a plugin basically for PSGI workers so that a standby worker can
    be spun up prior to terminating the original worker.

  USAGE
      Daemon::Control->with_plugins('HotStandby')->new({ ... });

  NOTES and CAUTIONS
    This is not a particularly smart hot standby daemon. It uses double the
    value of $self->kill_timeout to work out how long to wait before killing
    the original process, after bringing its hot standby up.
    HADaemon::Control does something smarter, but it has the disadvantage of
    being based on a forked, older version of Daemon::Control, and doesn't
    ship with any tests. Hopefully one day there will be a
    Daemon::Control::Plugin::HighAvailability that deals with these
    problems, but for now this is a reasonable solution. Just test it
    thoroughly with your kit before you send it out into the wild.

    Until we work out and optimise what needs to be factored out into
    separate utility subroutines in Daemon::Control, this module contains
    far more code than is needed (copy/paste/refactor from the parent
    module). Also it might break depending on future releases post version
    0.001007 of Daemon::Control.

  LICENCE
    This code can be distributed under the same terms as perl itself.

  AUTHOR
    Kieren Diment <zarquon@cpan.org>

